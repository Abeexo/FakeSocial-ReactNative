{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getRandomContacts } from \"../../utils/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Card = function Card(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isBookmarked = _useState2[0],\n    setIsBookmarked = _useState2[1];\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      getRandomContacts().then(function (newContacts) {});\n    }, 120000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, []);\n  var handleBookmarkPress = function handleBookmarkPress() {\n    setIsBookmarked(!isBookmarked);\n  };\n  var handleCardPress = function handleCardPress() {\n    if (onPress) {\n      onPress();\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: handleCardPress,\n    disabled: disabled && !onPress,\n    children: _jsxs(View, {\n      style: styles.cardContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: item.image\n        },\n        style: styles.image\n      }), _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.description,\n            children: \"Nome:\"\n          }), _jsx(Text, {\n            style: styles.description,\n            children: \"Specie:\"\n          }), _jsx(Text, {\n            style: styles.description,\n            children: \"Location:\"\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            ellipsizeMode: \"tail\",\n            numberOfLines: 1,\n            style: styles.tail,\n            children: item.name\n          }), _jsx(Text, {\n            style: styles.tail,\n            ellipsizeMode: \"tail\",\n            numberOfLines: 1,\n            children: item.species\n          }), _jsx(Text, {\n            ellipsizeMode: \"tail\",\n            numberOfLines: 1,\n            style: styles.tail,\n            children: item.location.name\n          })]\n        }), _jsx(TouchableOpacity, {\n          onPress: handleBookmarkPress,\n          children: isBookmarked ? _jsx(IconBookmarkFilled, {\n            style: styles.icon\n          }) : _jsx(IconBookmarkEmpty, {\n            style: styles.icon\n          })\n        })]\n      })]\n    })\n  }, \"key-\" + index);\n};\nvar styles = StyleSheet.create({\n  cardContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#fff\",\n    height: 170,\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 30,\n    alignItems: \"center\",\n    marginVertical: 20\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  image: {\n    height: 100,\n    width: 100,\n    borderRadius: 80\n  },\n  description: {\n    fontWeight: \"bold\",\n    padding: 4\n  },\n  tail: {\n    padding: 4,\n    width: 120\n  },\n  icon: {\n    marginLeft: 16\n  }\n});\nexport default Card;","map":{"version":3,"names":["React","useState","useEffect","TouchableOpacity","View","Image","Text","StyleSheet","getRandomContacts","jsx","_jsx","jsxs","_jsxs","Card","_ref","item","index","disabled","onPress","_useState","_useState2","_slicedToArray","isBookmarked","setIsBookmarked","timer","setTimeout","then","newContacts","clearTimeout","handleBookmarkPress","handleCardPress","activeOpacity","children","style","styles","cardContainer","source","uri","image","card","description","ellipsizeMode","numberOfLines","tail","name","species","location","IconBookmarkFilled","icon","IconBookmarkEmpty","create","flexDirection","justifyContent","backgroundColor","height","width","padding","borderRadius","alignItems","marginVertical","fontWeight","marginLeft"],"sources":["C:/Users/Simone/Desktop/Contactgram/exercise/src/components/Card/Card.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TouchableOpacity, View, Image, Text, StyleSheet } from \"react-native\";\nimport { Data } from \"../../models/Data\";\nimport { getRandomContacts } from \"../../utils/api\";\n\ninterface Props {\n  item: Data;\n  index: number;\n  disabled?: boolean;\n  onPress?: () => void;\n}\n\nconst Card = ({ item, index, disabled, onPress }: Props) => {\n  const [isBookmarked, setIsBookmarked] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // Aggiorna la lista dei contatti dopo 120 secondi\n      getRandomContacts().then((newContacts) => {\n        // TODO: Implementare la logica per mostrare i nuovi contatti\n      });\n    }, 120000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleBookmarkPress = () => {\n    setIsBookmarked(!isBookmarked);\n  };\n\n  const handleCardPress = () => {\n    if (onPress) {\n      onPress();\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.5}\n      key={`key-${index}`}\n      onPress={handleCardPress}\n      disabled={disabled && !onPress}\n    >\n      <View style={styles.cardContainer}>\n        <Image\n          source={{\n            uri: item.image,\n          }}\n          style={styles.image}\n        />\n        <View style={styles.card}>\n          <View>\n            <Text style={styles.description}>Nome:</Text>\n            <Text style={styles.description}>Specie:</Text>\n            <Text style={styles.description}>Location:</Text>\n          </View>\n          <View>\n            <Text ellipsizeMode=\"tail\" numberOfLines={1} style={styles.tail}>\n              {item.name}\n            </Text>\n            <Text style={styles.tail} ellipsizeMode=\"tail\" numberOfLines={1}>\n              {item.species}\n            </Text>\n            <Text ellipsizeMode=\"tail\" numberOfLines={1} style={styles.tail}>\n              {item.location.name}\n            </Text>\n          </View>\n          <TouchableOpacity onPress={handleBookmarkPress}>\n            {isBookmarked ? (\n              <IconBookmarkFilled style={styles.icon} />\n            ) : (\n              <IconBookmarkEmpty style={styles.icon} />\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#fff\",\n    height: 170,\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 30,\n    alignItems: \"center\",\n    marginVertical: 20,\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  image: {\n    height: 100,\n    width: 100,\n    borderRadius: 80,\n  },\n  description: {\n    fontWeight: \"bold\",\n    padding: 4,\n  },\n  tail: {\n    padding: 4,\n    width: 120,\n  },\n  icon: {\n    marginLeft: 16,\n  },\n});\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}