{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ACCOUNT_ACTIONS } from \"../redux/actions/accountActions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useSelector = useSelector(function (state) {\n      return state.accountReducer;\n    }),\n    account = _useSelector.account;\n  var dispatch = useDispatch();\n  var _useState = useState(account.email),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(account.password),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(account.image),\n    _useState6 = _slicedToArray(_useState5, 2),\n    imageUri = _useState6[0],\n    setImageUri = _useState6[1];\n  var _useState7 = useState(account.firstName),\n    _useState8 = _slicedToArray(_useState7, 2),\n    firstName = _useState8[0],\n    setFirstName = _useState8[1];\n  var _useState9 = useState(account.lastName),\n    _useState10 = _slicedToArray(_useState9, 2),\n    lastName = _useState10[0],\n    setLastName = _useState10[1];\n  var _useState11 = useState(account.dateOfBirth),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(account.nationality),\n    _useState14 = _slicedToArray(_useState13, 2),\n    nationality = _useState14[0],\n    setNationality = _useState14[1];\n  var _useState15 = useState(account.city),\n    _useState16 = _slicedToArray(_useState15, 2),\n    city = _useState16[0],\n    setCity = _useState16[1];\n  var _useState17 = useState(account.phoneNumber),\n    _useState18 = _slicedToArray(_useState17, 2),\n    phoneNumber = _useState18[0],\n    setPhoneNumber = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isEditing = _useState20[0],\n    setIsEditing = _useState20[1];\n  var handleEdit = function handleEdit() {\n    setIsEditing(true);\n  };\n  var handleSaveChanges = function handleSaveChanges() {\n    if (isEditing) {\n      dispatch({\n        type: ACCOUNT_ACTIONS.UPDATE_ACCOUNT,\n        payload: {\n          email: email,\n          password: password,\n          isLogged: true,\n          firstName: firstName,\n          lastName: lastName,\n          dateOfBirth: dateOfBirth,\n          nationality: nationality,\n          city: city,\n          phoneNumber: phoneNumber,\n          image: imageUri\n        }\n      });\n    } else {\n      dispatch({\n        type: ACCOUNT_ACTIONS.ADD_ACCOUNT,\n        payload: {\n          email: email,\n          password: password,\n          isLogged: true,\n          firstName: firstName,\n          lastName: lastName,\n          dateOfBirth: dateOfBirth,\n          nationality: nationality,\n          city: city,\n          phoneNumber: phoneNumber,\n          image: imageUri\n        }\n      });\n    }\n  };\n  var handleImagePicker = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== \"granted\") {\n        alert(\"Per favore, abilita i permessi per la libreria multimediale.\");\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 1\n      });\n      if (!result.cancelled) {\n        setImageUri(result.uri);\n      }\n    });\n    return function handleImagePicker() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: {\n        width: 200,\n        height: 200,\n        borderRadius: 100\n      }\n    }), _jsx(Button, {\n      title: \"Cambia immagine\",\n      onPress: handleImagePicker\n    }), _jsx(Text, {\n      children: \"Nome\"\n    }), _jsx(TextInput, {\n      value: firstName,\n      onChangeText: setFirstName\n    }), _jsx(Text, {\n      children: \"Cognome\"\n    }), _jsx(TextInput, {\n      value: lastName,\n      onChangeText: setLastName\n    }), _jsx(Text, {\n      children: \"Data di nascita\"\n    }), _jsx(TextInput, {\n      value: dateOfBirth,\n      onChangeText: setDateOfBirth\n    }), _jsx(Text, {\n      children: \"Nazionalit\\xE0\"\n    }), _jsx(TextInput, {\n      value: nationality,\n      onChangeText: setNationality\n    }), _jsx(Text, {\n      children: \"Citt\\xE0\"\n    }), _jsx(TextInput, {\n      value: city,\n      onChangeText: setCity\n    }), _jsx(Text, {\n      children: \"Telefono\"\n    }), _jsx(TextInput, {\n      value: phoneNumber,\n      onChangeText: setPhoneNumber\n    }), _jsx(Text, {\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(Text, {\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Salva modifiche\",\n      onPress: handleSaveChanges\n    }), _jsx(Button, {\n      title: \"Modifica\",\n      onPress: handleEdit\n    })]\n  });\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","Button","Image","Text","TextInput","View","useDispatch","useSelector","ACCOUNT_ACTIONS","ImagePicker","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useSelector","state","accountReducer","account","dispatch","_useState","email","_useState2","_slicedToArray","setEmail","_useState3","password","_useState4","setPassword","_useState5","image","_useState6","imageUri","setImageUri","_useState7","firstName","_useState8","setFirstName","_useState9","lastName","_useState10","setLastName","_useState11","dateOfBirth","_useState12","setDateOfBirth","_useState13","nationality","_useState14","setNationality","_useState15","city","_useState16","setCity","_useState17","phoneNumber","_useState18","setPhoneNumber","_useState19","_useState20","isEditing","setIsEditing","handleEdit","handleSaveChanges","type","UPDATE_ACCOUNT","payload","isLogged","ADD_ACCOUNT","handleImagePicker","_ref","_asyncToGenerator","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","alert","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","cancelled","uri","apply","arguments","style","flex","alignItems","justifyContent","children","source","width","height","borderRadius","title","onPress","value","onChangeText","secureTextEntry"],"sources":["C:/Users/Simone/Desktop/Contactgram/exercise/src/screen/ProfileScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Image, Text, TextInput, View } from \"react-native\";\nimport { ScreenFC } from \"../models/ScreenFC\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Account, AccountAction, ACCOUNT_ACTIONS, AccountProps } from \"../redux/actions/accountActions\";\nimport * as ImagePicker from 'expo-image-picker';\n\nconst ProfileScreen: ScreenFC<\"Profile\"> = () => {\n  const { account } = useSelector(\n    (state: { accountReducer: AccountProps }) => state.accountReducer\n  );\n    \nconst dispatch = useDispatch();\n\nconst [email, setEmail] = useState<string>(account.email);\nconst [password, setPassword] = useState<string>(account.password);\nconst [imageUri, setImageUri] = useState<string>(account.image);\nconst [firstName, setFirstName] = useState<string>(account.firstName);\nconst [lastName, setLastName] = useState<string>(account.lastName);\nconst [dateOfBirth, setDateOfBirth] = useState<string>(account.dateOfBirth);\nconst [nationality, setNationality] = useState<string>(account.nationality);\nconst [city, setCity] = useState<string>(account.city);\nconst [phoneNumber, setPhoneNumber] = useState<string>(account.phoneNumber);\nconst [isEditing, setIsEditing] = useState<boolean>(false);\n\n\ninterface CustomImagePickerResult {\n  cancelled: boolean;\n  uri: string;\n  type?: string;\n  width?: number;\n  height?: number;\n}\n\nconst handleEdit = () => {\n  setIsEditing(true);\n};\n\n\nconst handleSaveChanges = () => {\n  if (isEditing) {\n    dispatch({\n      type: ACCOUNT_ACTIONS.UPDATE_ACCOUNT,\n      payload: {\n        email,\n        password,\n        isLogged: true,\n        firstName,\n        lastName,\n        dateOfBirth,\n        nationality,\n        city,\n        phoneNumber,\n        image: imageUri,\n      },\n    } as AccountAction);\n  } else {\n    dispatch({\n      type: ACCOUNT_ACTIONS.ADD_ACCOUNT,\n      payload: {\n        email,\n        password,\n        isLogged: true,\n        firstName,\n        lastName,\n        dateOfBirth,\n        nationality,\n        city,\n        phoneNumber,\n        image: imageUri,\n      },\n    } as AccountAction);\n  }\n};\n\nconst handleImagePicker = async () => {\nconst { status } =\nawait ImagePicker.requestMediaLibraryPermissionsAsync();\nif (status !== \"granted\") {\nalert(\"Per favore, abilita i permessi per la libreria multimediale.\");\nreturn;\n}\nconst result = await ImagePicker.launchImageLibraryAsync({\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\n  allowsEditing: true,\n  quality: 1,\n}) as unknown as CustomImagePickerResult;\nif (!result.cancelled) {\nsetImageUri(result.uri);\n}\n};\n\nreturn (\n<View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n<Image source={{ uri: imageUri }} style={{ width: 200, height: 200, borderRadius: 100 }} />\n<Button title=\"Cambia immagine\" onPress={handleImagePicker} />\n<Text>Nome</Text>\n<TextInput value={firstName} onChangeText={setFirstName} />\n<Text>Cognome</Text>\n<TextInput value={lastName} onChangeText={setLastName} />\n<Text>Data di nascita</Text>\n<TextInput value={dateOfBirth} onChangeText={setDateOfBirth} />\n<Text>Nazionalità</Text>\n<TextInput value={nationality} onChangeText={setNationality} />\n<Text>Città</Text>\n<TextInput value={city} onChangeText={setCity} />\n<Text>Telefono</Text>\n<TextInput value={phoneNumber} onChangeText={setPhoneNumber} />\n<Text>Email</Text>\n<TextInput value={email} onChangeText={setEmail} />\n<Text>Password</Text>\n<TextInput value={password} onChangeText={setPassword} secureTextEntry={true} />\n<Button title=\"Salva modifiche\" onPress={handleSaveChanges} />\n<Button title=\"Modifica\" onPress={handleEdit} />\n\n</View>\n\n);\n};\n\nexport default ProfileScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAGxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAiCC,eAAe;AAChD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,aAAkC,GAAG,SAArCA,aAAkCA,CAAA,EAAS;EAC/C,IAAAC,YAAA,GAAoBR,WAAW,CAC7B,UAACS,KAAuC;MAAA,OAAKA,KAAK,CAACC,cAAc;IAAA,CACnE,CAAC;IAFOC,OAAO,GAAAH,YAAA,CAAPG,OAAO;EAIjB,IAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,IAAAc,SAAA,GAA0BpB,QAAQ,CAASkB,OAAO,CAACG,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAlDC,KAAK,GAAAC,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgCzB,QAAQ,CAASkB,OAAO,CAACQ,QAAQ,CAAC;IAAAC,UAAA,GAAAJ,cAAA,CAAAE,UAAA;IAA3DC,QAAQ,GAAAC,UAAA;IAAEC,WAAW,GAAAD,UAAA;EAC5B,IAAAE,UAAA,GAAgC7B,QAAQ,CAASkB,OAAO,CAACY,KAAK,CAAC;IAAAC,UAAA,GAAAR,cAAA,CAAAM,UAAA;IAAxDG,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAkClC,QAAQ,CAASkB,OAAO,CAACiB,SAAS,CAAC;IAAAC,UAAA,GAAAb,cAAA,CAAAW,UAAA;IAA9DC,SAAS,GAAAC,UAAA;IAAEC,YAAY,GAAAD,UAAA;EAC9B,IAAAE,UAAA,GAAgCtC,QAAQ,CAASkB,OAAO,CAACqB,QAAQ,CAAC;IAAAC,WAAA,GAAAjB,cAAA,CAAAe,UAAA;IAA3DC,QAAQ,GAAAC,WAAA;IAAEC,WAAW,GAAAD,WAAA;EAC5B,IAAAE,WAAA,GAAsC1C,QAAQ,CAASkB,OAAO,CAACyB,WAAW,CAAC;IAAAC,WAAA,GAAArB,cAAA,CAAAmB,WAAA;IAApEC,WAAW,GAAAC,WAAA;IAAEC,cAAc,GAAAD,WAAA;EAClC,IAAAE,WAAA,GAAsC9C,QAAQ,CAASkB,OAAO,CAAC6B,WAAW,CAAC;IAAAC,WAAA,GAAAzB,cAAA,CAAAuB,WAAA;IAApEC,WAAW,GAAAC,WAAA;IAAEC,cAAc,GAAAD,WAAA;EAClC,IAAAE,WAAA,GAAwBlD,QAAQ,CAASkB,OAAO,CAACiC,IAAI,CAAC;IAAAC,WAAA,GAAA7B,cAAA,CAAA2B,WAAA;IAA/CC,IAAI,GAAAC,WAAA;IAAEC,OAAO,GAAAD,WAAA;EACpB,IAAAE,WAAA,GAAsCtD,QAAQ,CAASkB,OAAO,CAACqC,WAAW,CAAC;IAAAC,WAAA,GAAAjC,cAAA,CAAA+B,WAAA;IAApEC,WAAW,GAAAC,WAAA;IAAEC,cAAc,GAAAD,WAAA;EAClC,IAAAE,WAAA,GAAkC1D,QAAQ,CAAU,KAAK,CAAC;IAAA2D,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAAnDE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAW9B,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAGD,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAIH,SAAS,EAAE;MACbzC,QAAQ,CAAC;QACP6C,IAAI,EAAExD,eAAe,CAACyD,cAAc;QACpCC,OAAO,EAAE;UACP7C,KAAK,EAALA,KAAK;UACLK,QAAQ,EAARA,QAAQ;UACRyC,QAAQ,EAAE,IAAI;UACdhC,SAAS,EAATA,SAAS;UACTI,QAAQ,EAARA,QAAQ;UACRI,WAAW,EAAXA,WAAW;UACXI,WAAW,EAAXA,WAAW;UACXI,IAAI,EAAJA,IAAI;UACJI,WAAW,EAAXA,WAAW;UACXzB,KAAK,EAAEE;QACT;MACF,CAAkB,CAAC;IACrB,CAAC,MAAM;MACLb,QAAQ,CAAC;QACP6C,IAAI,EAAExD,eAAe,CAAC4D,WAAW;QACjCF,OAAO,EAAE;UACP7C,KAAK,EAALA,KAAK;UACLK,QAAQ,EAARA,QAAQ;UACRyC,QAAQ,EAAE,IAAI;UACdhC,SAAS,EAATA,SAAS;UACTI,QAAQ,EAARA,QAAQ;UACRI,WAAW,EAAXA,WAAW;UACXI,WAAW,EAAXA,WAAW;UACXI,IAAI,EAAJA,IAAI;UACJI,WAAW,EAAXA,WAAW;UACXzB,KAAK,EAAEE;QACT;MACF,CAAkB,CAAC;IACrB;EACF,CAAC;EAED,IAAMqC,iBAAiB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAAC,qBAAA,SACM/D,WAAW,CAACgE,mCAAmC,CAAC,CAAC;QAD/CC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MAEd,IAAIA,MAAM,KAAK,SAAS,EAAE;QAC1BC,KAAK,CAAC,8DAA8D,CAAC;QACrE;MACA;MACA,IAAMC,MAAM,SAASnE,WAAW,CAACoE,uBAAuB,CAAC;QACvDC,UAAU,EAAErE,WAAW,CAACsE,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAE;MACX,CAAC,CAAuC;MACxC,IAAI,CAACN,MAAM,CAACO,SAAS,EAAE;QACvBlD,WAAW,CAAC2C,MAAM,CAACQ,GAAG,CAAC;MACvB;IACA,CAAC;IAAA,gBAfKf,iBAAiBA,CAAA;MAAA,OAAAC,IAAA,CAAAe,KAAA,OAAAC,SAAA;IAAA;EAAA,GAetB;EAED,OACAzE,KAAA,CAACR,IAAI;IAACkF,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACzEhF,IAAA,CAACT,KAAK;MAAC0F,MAAM,EAAE;QAAER,GAAG,EAAEpD;MAAS,CAAE;MAACuD,KAAK,EAAE;QAAEM,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,YAAY,EAAE;MAAI;IAAE,CAAE,CAAC,EAC3FpF,IAAA,CAACV,MAAM;MAAC+F,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAE5B;IAAkB,CAAE,CAAC,EAC9D1D,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAI,CAAM,CAAC,EACjBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAE/D,SAAU;MAACgE,YAAY,EAAE9D;IAAa,CAAE,CAAC,EAC3D1B,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAO,CAAM,CAAC,EACpBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAE3D,QAAS;MAAC4D,YAAY,EAAE1D;IAAY,CAAE,CAAC,EACzD9B,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAe,CAAM,CAAC,EAC5BhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAEvD,WAAY;MAACwD,YAAY,EAAEtD;IAAe,CAAE,CAAC,EAC/DlC,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAW,CAAM,CAAC,EACxBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAEnD,WAAY;MAACoD,YAAY,EAAElD;IAAe,CAAE,CAAC,EAC/DtC,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAE/C,IAAK;MAACgD,YAAY,EAAE9C;IAAQ,CAAE,CAAC,EACjD1C,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAQ,CAAM,CAAC,EACrBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAE3C,WAAY;MAAC4C,YAAY,EAAE1C;IAAe,CAAE,CAAC,EAC/D9C,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAE7E,KAAM;MAAC8E,YAAY,EAAE3E;IAAS,CAAE,CAAC,EACnDb,IAAA,CAACR,IAAI;MAAAwF,QAAA,EAAC;IAAQ,CAAM,CAAC,EACrBhF,IAAA,CAACP,SAAS;MAAC8F,KAAK,EAAExE,QAAS;MAACyE,YAAY,EAAEvE,WAAY;MAACwE,eAAe,EAAE;IAAK,CAAE,CAAC,EAChFzF,IAAA,CAACV,MAAM;MAAC+F,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAElC;IAAkB,CAAE,CAAC,EAC9DpD,IAAA,CAACV,MAAM;MAAC+F,KAAK,EAAC,UAAU;MAACC,OAAO,EAAEnC;IAAW,CAAE,CAAC;EAAA,CAE1C,CAAC;AAGP,CAAC;AAED,eAAehD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}