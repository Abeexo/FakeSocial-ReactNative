{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Card = function Card(_ref) {\n  var item = _ref.item,\n    onPress = _ref.onPress,\n    onAddToFavorites = _ref.onAddToFavorites;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFavorite = _useState2[0],\n    setIsFavorite = _useState2[1];\n  var handleFavoritePress = function handleFavoritePress() {\n    setIsFavorite(!isFavorite);\n    if (onAddToFavorites) {\n      onAddToFavorites(item);\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.cardContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: item.picture\n        },\n        style: styles.image\n      }), _jsx(TouchableOpacity, {\n        onPress: handleFavoritePress,\n        style: styles.iconContainer,\n        children: _jsx(MaterialIcons, {\n          name: isFavorite ? \"favorite\" : \"favorite-border\",\n          size: 24,\n          color: isFavorite ? \"red\" : \"black\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: \"none\",\n    height: 150,\n    width: 100,\n    padding: 10,\n    borderRadius: 0,\n    alignItems: \"center\",\n    marginVertical: 15,\n    margin: 10,\n    justifyContent: \"flex-start\"\n  },\n  image: {\n    height: 100,\n    width: 100,\n    borderRadius: 0\n  },\n  iconContainer: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 20\n  }\n});\nexport default Card;","map":{"version":3,"names":["React","useState","TouchableOpacity","View","Image","StyleSheet","MaterialIcons","jsx","_jsx","jsxs","_jsxs","Card","_ref","item","onPress","onAddToFavorites","_useState","_useState2","_slicedToArray","isFavorite","setIsFavorite","handleFavoritePress","activeOpacity","children","style","styles","cardContainer","source","uri","picture","image","iconContainer","name","size","color","create","backgroundColor","height","width","padding","borderRadius","alignItems","marginVertical","margin","justifyContent","position","right","bottom"],"sources":["C:/Users/Simone/Desktop/Contactgram/exercise/src/components/Card/Card.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TouchableOpacity, View, Image, StyleSheet } from \"react-native\";\nimport { MaterialIcons } from '@expo/vector-icons';\n\ninterface Props {\n  item: {\n    picture: string;\n  };\n  onPress?: () => void;\n  onAddToFavorites?: (item: any) => void;\n}\n\nconst Card = ({ item, onPress, onAddToFavorites }: Props) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const handleFavoritePress = () => {\n    setIsFavorite(!isFavorite);\n    if (onAddToFavorites) {\n      onAddToFavorites(item);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.5}\n      onPress={onPress}\n    >\n      <View style={styles.cardContainer}>\n        <Image\n          source={{\n            uri: item.picture,\n          }}\n          style={styles.image}\n        />\n        <TouchableOpacity onPress={handleFavoritePress} style={styles.iconContainer}>\n          <MaterialIcons name={isFavorite ? \"favorite\" : \"favorite-border\"} size={24} color={isFavorite ? \"red\" : \"black\"} />\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: \"none\",\n    height: 150,\n    width: 100,\n    padding: 10,\n    borderRadius: 0,\n    alignItems: \"center\",\n    marginVertical: 15,\n    margin: 10,\n    justifyContent: \"flex-start\",\n  },\n  image: {\n    height: 100,\n    width: 100,\n    borderRadius: 0,\n  },\n  iconContainer: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 20,\n  },\n});\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAUnD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAmD;EAAA,IAA7CC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,gBAAgB,GAAAH,IAAA,CAAhBG,gBAAgB;EAC7C,IAAAC,SAAA,GAAoCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B,IAAIJ,gBAAgB,EAAE;MACpBA,gBAAgB,CAACF,IAAI,CAAC;IACxB;EACF,CAAC;EAED,OACEL,IAAA,CAACN,gBAAgB;IACfoB,aAAa,EAAE,GAAI;IACnBR,OAAO,EAAEA,OAAQ;IAAAS,QAAA,EAEjBb,KAAA,CAACP,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACC,aAAc;MAAAH,QAAA,GAChCf,IAAA,CAACJ,KAAK;QACJuB,MAAM,EAAE;UACNC,GAAG,EAAEf,IAAI,CAACgB;QACZ,CAAE;QACFL,KAAK,EAAEC,MAAM,CAACK;MAAM,CACrB,CAAC,EACFtB,IAAA,CAACN,gBAAgB;QAACY,OAAO,EAAEO,mBAAoB;QAACG,KAAK,EAAEC,MAAM,CAACM,aAAc;QAAAR,QAAA,EAC1Ef,IAAA,CAACF,aAAa;UAAC0B,IAAI,EAAEb,UAAU,GAAG,UAAU,GAAG,iBAAkB;UAACc,IAAI,EAAE,EAAG;UAACC,KAAK,EAAEf,UAAU,GAAG,KAAK,GAAG;QAAQ,CAAE;MAAC,CACnG,CAAC;IAAA,CACf;EAAC,CACS,CAAC;AAEvB,CAAC;AAED,IAAMM,MAAM,GAAGpB,UAAU,CAAC8B,MAAM,CAAC;EAC/BT,aAAa,EAAE;IACbU,eAAe,EAAE,MAAM;IACvBC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB,CAAC;EACDd,KAAK,EAAE;IACLO,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVE,YAAY,EAAE;EAChB,CAAC;EACDT,aAAa,EAAE;IACbc,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAepC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}