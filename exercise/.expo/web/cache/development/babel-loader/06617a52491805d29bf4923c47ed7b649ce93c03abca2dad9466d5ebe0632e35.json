{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from \"react-redux\";\nimport Card from \"../components/Card/Card\";\nimport { removeAllBookmark, removeBookmark } from \"../redux/actions/bookmarkActions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Favorites = function Favorites() {\n  var _useSelector = useSelector(function (state) {\n      return state.bookmarkReducer;\n    }),\n    bookmarks = _useSelector.bookmarks;\n  var dispatch = useDispatch();\n  return _jsx(View, {\n    style: {\n      backgroundColor: \"#fc8386\",\n      paddingHorizontal: 20,\n      flex: 1\n    },\n    children: bookmarks.length > 0 ? _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          paddingVertical: 20,\n          alignItems: \"flex-end\"\n        },\n        activeOpacity: 0.4,\n        onPress: function onPress() {\n          return dispatch(removeAllBookmark());\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"delete\",\n          color: \"red\",\n          size: 30\n        })\n      }), _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: {\n          width: \"100%\",\n          elevation: 2,\n          shadowColor: \"black\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: bookmarks == null ? void 0 : bookmarks.map(function (item, index) {\n          return _jsx(Card, {\n            item: item,\n            index: index,\n            disabled: true,\n            onPress: function onPress() {\n              return dispatch(removeBookmark(item.id));\n            },\n            isBookmarked: false,\n            isFavorite: true\n          }, index);\n        })\n      })]\n    }) : _jsx(View, {\n      children: _jsx(Text, {\n        style: {\n          color: \"#000000\",\n          fontSize: 20\n        },\n        children: \"No Bookmark present\"\n      })\n    })\n  });\n};\nexport default Favorites;","map":{"version":3,"names":["React","View","Text","ScrollView","useSelector","Card","removeAllBookmark","removeBookmark","TouchableOpacity","MaterialCommunityIcons","useDispatch","jsx","_jsx","jsxs","_jsxs","Favorites","_useSelector","state","bookmarkReducer","bookmarks","dispatch","style","backgroundColor","paddingHorizontal","flex","children","length","paddingVertical","alignItems","activeOpacity","onPress","name","color","size","showsHorizontalScrollIndicator","horizontal","width","elevation","shadowColor","flexDirection","flexWrap","justifyContent","map","item","index","disabled","id","isBookmarked","isFavorite","fontSize"],"sources":["C:/Users/Simone/Desktop/Contactgram/exercise/src/screen/Favorites.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, Text, ScrollView,StyleSheet } from \"react-native\";\nimport { CustomScreenFC } from \"../models/ScreenFC\";\nimport { useSelector } from \"react-redux\";\nimport { Data } from \"../models/Data\";\nimport Card from \"../components/Card/Card\";\nimport {\n  BookmarkProps,\n  removeAllBookmark,\n  removeBookmark,\n} from \"../redux/actions/bookmarkActions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useDispatch } from \"react-redux\";\n\n\nconst Favorites: CustomScreenFC<\"Favorite\"> = () => {\n  const { bookmarks } = useSelector(\n    (state: { bookmarkReducer: BookmarkProps }) => state.bookmarkReducer\n  );\n\n  const dispatch = useDispatch();\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"#fc8386\",\n        paddingHorizontal: 20,\n        flex: 1,\n      }}\n    >\n      {bookmarks.length > 0 ? (\n        <View>\n          <TouchableOpacity\n            style={{ paddingVertical: 20, alignItems: \"flex-end\" }}\n            activeOpacity={0.4}\n            onPress={() => dispatch(removeAllBookmark())}>\n            <MaterialCommunityIcons name=\"delete\" color=\"red\" size={30} />\n          </TouchableOpacity>\n          <ScrollView\n  showsHorizontalScrollIndicator={false} // mostra solo la barra di scorrimento orizzontale\n  horizontal // imposta il layout orizzontale\n  style={{\n    width: \"100%\",\n    elevation: 2,\n    shadowColor: \"black\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent:\"center\",\n    alignItems:\"center\",\n  }}\n>\n  {bookmarks?.map((item: Data, index: number) => {\n    return (\n      <Card\n        item={item}\n        index={index}\n        key={index}\n        disabled\n        onPress={() => dispatch(removeBookmark(item.id))}\n        isBookmarked={false}\n        isFavorite={true}\n      />\n    );\n  })}\n</ScrollView>\n          </View>\n      ) : (\n        <View>\n          <Text style={{ color: \"#000000\", fontSize: 20 }}>\n            No Bookmark present\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\n\n\n\nexport default Favorites;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAG1B,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,IAAI;AACX,SAEEC,iBAAiB,EACjBC,cAAc;AAEhB,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1C,IAAMC,SAAqC,GAAG,SAAxCA,SAAqCA,CAAA,EAAS;EAClD,IAAAC,YAAA,GAAsBZ,WAAW,CAC/B,UAACa,KAAyC;MAAA,OAAKA,KAAK,CAACC,eAAe;IAAA,CACtE,CAAC;IAFOC,SAAS,GAAAH,YAAA,CAATG,SAAS;EAIjB,IAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,OACEE,IAAA,CAACX,IAAI;IACHoB,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAC1BC,iBAAiB,EAAE,EAAE;MACrBC,IAAI,EAAE;IACR,CAAE;IAAAC,QAAA,EAEDN,SAAS,CAACO,MAAM,GAAG,CAAC,GACnBZ,KAAA,CAACb,IAAI;MAAAwB,QAAA,GACHb,IAAA,CAACJ,gBAAgB;QACfa,KAAK,EAAE;UAAEM,eAAe,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAW,CAAE;QACvDC,aAAa,EAAE,GAAI;QACnBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,QAAQ,CAACd,iBAAiB,CAAC,CAAC,CAAC;QAAA,CAAC;QAAAmB,QAAA,EAC7Cb,IAAA,CAACH,sBAAsB;UAACsB,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC,KAAK;UAACC,IAAI,EAAE;QAAG,CAAE;MAAC,CAC9C,CAAC,EACnBrB,IAAA,CAACT,UAAU;QACnB+B,8BAA8B,EAAE,KAAM;QACtCC,UAAU;QACVd,KAAK,EAAE;UACLe,KAAK,EAAE,MAAM;UACbC,SAAS,EAAE,CAAC;UACZC,WAAW,EAAE,OAAO;UACpBC,aAAa,EAAE,KAAK;UACpBC,QAAQ,EAAE,MAAM;UAChBC,cAAc,EAAC,QAAQ;UACvBb,UAAU,EAAC;QACb,CAAE;QAAAH,QAAA,EAEDN,SAAS,oBAATA,SAAS,CAAEuB,GAAG,CAAC,UAACC,IAAU,EAAEC,KAAa,EAAK;UAC7C,OACEhC,IAAA,CAACP,IAAI;YACHsC,IAAI,EAAEA,IAAK;YACXC,KAAK,EAAEA,KAAM;YAEbC,QAAQ;YACRf,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMV,QAAQ,CAACb,cAAc,CAACoC,IAAI,CAACG,EAAE,CAAC,CAAC;YAAA,CAAC;YACjDC,YAAY,EAAE,KAAM;YACpBC,UAAU,EAAE;UAAK,GAJZJ,KAKN,CAAC;QAEN,CAAC;MAAC,CACQ,CAAC;IAAA,CACG,CAAC,GAEThC,IAAA,CAACX,IAAI;MAAAwB,QAAA,EACHb,IAAA,CAACV,IAAI;QAACmB,KAAK,EAAE;UAAEW,KAAK,EAAE,SAAS;UAAEiB,QAAQ,EAAE;QAAG,CAAE;QAAAxB,QAAA,EAAC;MAEjD,CAAM;IAAC,CACH;EACP,CACG,CAAC;AAEX,CAAC;AAKD,eAAeV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}